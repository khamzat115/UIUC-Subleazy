{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kahmi\\\\OneDrive\\\\Documents\\\\webdev\\\\sublease_app\\\\client\\\\src\\\\pages\\\\my-posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPosts = () => {\n  _s();\n  const [savesosts, setPosts] = useState([]);\n  const user_id = window.localStorage.getItem(\"userID\");\n  useEffect(() => {\n    // to get all posts everytime the page is loaded\n    const fetchSavedPosts = async () => {\n      // to get all saved posts of a user\n      try {\n        const response = await axios.get(`http://localhost:3001/posts/bookmarks/ids/${user_id}`);\n        setSavedPosts(response.data.bookmarks);\n        console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPosts();\n    fetchSavedPosts();\n  }, []);\n  const savePost = async post_id => {\n    // to save a post to the user's bookmarks\n    try {\n      const response = await axios.put(\"http://localhost:3001/posts\", {\n        user_id,\n        post_id\n      });\n      console.log(response);\n      setSavedPosts([...savedPosts, post_id]); //? add the post to the saved posts\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const isBookmarked = post_id => savedPosts.includes(post_id); // to check if a post is bookmarked\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => savePost(post._id),\n          disabled: isBookmarked(post._id),\n          children: [isBookmarked(post._id) ? \"Bookmarked\" : \"Bookmark\", \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.rent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image,\n          alt: \"apartment image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone Number: \", post.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(MyPosts, \"7rFqsuHe9m4KHA66Z/bEWdW7rDI=\");\n_c = MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MyPosts","_s","savesosts","setPosts","user_id","window","localStorage","getItem","fetchSavedPosts","response","get","setSavedPosts","data","bookmarks","console","log","error","fetchPosts","savePost","post_id","put","savedPosts","isBookmarked","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","posts","map","post","name","onClick","_id","disabled","address","rent","description","src","image","alt","contact","_c","$RefreshReg$"],"sources":["C:/Users/kahmi/OneDrive/Documents/webdev/sublease_app/client/src/pages/my-posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const MyPosts = () => {\r\n    const [savesosts, setPosts] = useState([]);\r\n    const user_id = window.localStorage.getItem(\"userID\");\r\n\r\n    useEffect(() => { // to get all posts everytime the page is loaded\r\n        const fetchSavedPosts = async () => { // to get all saved posts of a user\r\n            try{\r\n                const response = await axios.get(`http://localhost:3001/posts/bookmarks/ids/${user_id}`);\r\n                setSavedPosts(response.data.bookmarks);\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchPosts();\r\n        fetchSavedPosts();\r\n    }, []);\r\n    const savePost = async (post_id) => { // to save a post to the user's bookmarks\r\n        try{\r\n            const response = await axios.put(\"http://localhost:3001/posts\", {user_id, post_id});\r\n            console.log(response);\r\n            setSavedPosts([...savedPosts, post_id]); //? add the post to the saved posts\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    \r\n    const isBookmarked = (post_id) => savedPosts.includes(post_id); // to check if a post is bookmarked\r\n\r\n    return (\r\n        <div>\r\n            <h1>Listings</h1>\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post._id}>\r\n                        <h2>{post.name}</h2>\r\n                        <button onClick={() => savePost(post._id)} \r\n                            disabled= {isBookmarked(post._id)}>\r\n                                {isBookmarked(post._id) ? \"Bookmarked\" : \"Bookmark\"}  {/*change button text based on bookmark status*/}\r\n                                </button> \r\n                        <p>{post.address}</p>\r\n                        <p>{post.rent}</p>\r\n                        <p>{post.description}</p>\r\n                        <img src={post.image} alt=\"apartment image\" />\r\n                        <p>Phone Number: {post.contact}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}