{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kahmi\\\\OneDrive\\\\Documents\\\\webdev\\\\sublease_app\\\\client\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // to get all posts everytime the page is loaded\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/posts\");\n        setPosts(response.data); // return the posts from the database\n        console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","fetchPosts","response","get","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kahmi/OneDrive/Documents/webdev/sublease_app/client/src/pages/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const Home = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => { // to get all posts everytime the page is loaded\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:3001/posts\");\r\n                setPosts(response.data); // return the posts from the database\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <h1>Listings</h1>\r\n\r\n        </div>\r\n    );\r\n    }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IAAE;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;QAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACzBC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACtB;IACJ,CAAC;IACDN,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIL,OAAA;IAAAY,QAAA,eACIZ,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEV,CAAC;AAAAd,EAAA,CApBQD,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}